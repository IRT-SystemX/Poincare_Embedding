from Visualization.Gaussian_Visualization import *
from Visualization.Gaussian_Mixture_Visualization import *
from EM_Algorithm.EM import *

#Multiprocessing parameters

number_processes = 1

Embedding_Parameter = dict(

    nstep=10,               # Length of the walks generated by the Random Walk algorithm
    context=5,              # Large data set: take context between 15 and 20
    nepoch=150,             # Number of iterations of gradient descent
    p_gradient=2,           # Only Hyperbolic
    negsample=3,            # Quoted "Our experiments indicate that values of negsample in the range 5–20 are useful for small training datasets
                            # while for large datasets the k can be as small as 2–5"
    space_dimension=10,     # Only Euclidean
    type=0                  # type = 0 for Social networks and type = 1 for word embedding  (the cost function is different for each case)

)

EM_Parameters = dict(

    M = 3,                  # Number of Gaussians used in the mix
    iter_max = 3            # Maximum number of EM iterations

)


Performance_Computation_Parameters = dict(

    truth_check = True      #Put True if a ground truth file is put in the directory and
                            #you would like to compute performances using it
)

#size_random = 100
#Z = np.random.uniform(low = 0, high = 0.5, size = size_random)+1j*np.random.uniform(low = 0.3, high = 0.6, size = size_random)

example_name = 'Books'

filename = 'Books.pkl'


EM( EM_Parameters['iter_max'],
    EM_Parameters['M'],
    example_name,
    filename,
    Performance_Computation_Parameters['truth_check']
    )







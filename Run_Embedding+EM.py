from EM_Embedding.Launch_Multi_Process_EM_Embed import *
#Multiprocessing parameters


example_name = 'Books'      #Specify the example name

number_processes = 1        #Number of processes in parallel

Embedding_Parameters = dict(

    nstep=10,               # Length of the walks generated by the Random Walk algorithm
    context=5,              # Large data set: take context between 15 and 20
    nepoch=150,             # Number of iterations of gradient descent
    p_gradient=2,           # Only Hyperbolic
    negsample=3,            # Quoted "Our experiments indicate that values of negsample in the range 5–20 are useful for small training datasets
                            # while for large datasets the k can be as small as 2–5"

    number_poincare_disks = 10,
                            # For multi-dimensional settings, we work in the product of many Poincaré disks
    type=0                  # type = 0 for Social networks and type = 1 for word embedding  (the cost function is different for each case)

)

EM_Parameters = dict(

    M = 3,                  # Number of Gaussians used in the mix
    iter_max = 3            # Maximum number of EM iterations

)

Plot_Parameters = dict(      #Requires matplotlib
    plot_or_no = True       #Set to False if you do not wish to plot

)


Performance_Computation_Parameters = dict(

    truth_check = True      #Put True if a ground truth file is put in the directory and
                            #you would like to compute performances using it
)




Launch_multiprocess_EM_Embed(number_processes, example_name, Embedding_Parameters, EM_Parameters, Performance_Computation_Parameters, Plot_Parameters)








